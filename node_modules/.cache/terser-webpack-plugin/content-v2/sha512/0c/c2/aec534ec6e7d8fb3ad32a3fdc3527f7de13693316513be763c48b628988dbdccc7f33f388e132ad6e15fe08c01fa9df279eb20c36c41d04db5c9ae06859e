{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{164:function(e,t,n){\"use strict\";(function(e){function o(e){return d.ItemIsFile&e?\"file\":d.ItemIsDir&e?\"directory\":d.ItemIsSymlink&e?\"symlink\":void 0}function r(e){return d.ItemRemoved&e?\"deleted\":d.ItemRenamed&e?\"moved\":d.ItemCreated&e?\"created\":d.ItemModified&e?\"modified\":d.RootChanged&e?\"root-changed\":d.ItemCloned&e?\"cloned\":function(e){for(let t in e)if(e[t])return!0;return!1}(e)?\"modified\":\"unknown\"}function i(e){return{inode:!!(d.ItemInodeMetaMod&e),finder:!!(d.ItemFinderInfoMod&e),access:!!(d.ItemChangeOwner&e),xattrs:!!(d.ItemXattrMod&e)}}if(\"darwin\"!==e.platform)throw new Error(`Module 'fsevents' is not compatible with platform '${e.platform}'`);const a=n(166),d=a.constants;t.watch=function(e,t){if(\"string\"!=typeof e)throw new TypeError(`fsevents argument 1 must be a string and not a ${typeof e}`);if(\"function\"!=typeof t)throw new TypeError(`fsevents argument 2 must be a function and not a ${typeof t}`);let n=a.start(e,t);if(!n)throw new Error(`could not watch: ${e}`);return()=>{const e=n?Promise.resolve(n).then(a.stop):Promise.resolve(void 0);return n=void 0,e}},t.getInfo=function(e,t){return{path:e,flags:t,event:r(t),type:o(t),changes:i(t)}},t.constants=d}).call(this,n(7))},166:function(){throw new Error(\"Module parse failed: Unexpected character 'ï¿½' (1:0)\\nYou may need an appropriate loader to handle this file type.\\n(Source code omitted for this binary file)\")}}]);","extractedComments":[]}